
upstream sensorlogger {
    server 127.0.0.1:5000 fail_timeout=0;
}

server {
    listen 86.59.12.250:80;
    server_name sensorlogger.mah.priv.at;

    error_log /var/log/nginx/error.log;

    proxy_cache_valid 301 20m;
    return 301 https://$host$request_uri;
}

server {
    listen 86.59.12.250:443 ssl http2;
    server_name sensorlogger.mah.priv.at;

    ssl_certificate /etc/letsencrypt/live/mah.priv.at/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mah.priv.at/privkey.pem;

    #error_log /var/log/nginx/sensorlogger.log debug;
    error_log /var/log/nginx/sensorlogger.log info;

    location / {
        if ($safe_country = no) {
            return 403;
        }

        if ($bad_country = yes) {
            return 444;
        }

        location / {
            # include proxy_params;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Prefix /;
            proxy_pass http://sensorlogger;
        }
        # https://flask-socketio.readthedocs.io/en/latest/deployment.html#using-nginx-as-a-websocket-reverse-proxy
        # location /socket.io {
        #     include proxy_params;
        #     proxy_http_version 1.1;
        #     proxy_buffering off;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "Upgrade";
        #     proxy_pass http://sensorlogger/socket.io;
        # }
        location /waitfor/ {
            proxy_pass http://sensorlogger;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        location /teleplot/ {
            proxy_pass http://sensorlogger;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
    }
}

